qtn7

a:

SELECT COUNT(*) AS total_managers, SUM(salary) AS total_salary FROM Staff WHERE oPosition = 'Manager';
************************************
-- Primary Key = staffNo 
-- Foreing key = branchNo (Not used)
-- Degree = 2  
-- Cardinality = 1 


b:

SELECT MAX(salary) AS max_salary, MIN(salary) AS min_salary, AVG(salary) AS avg_salary FROM Staff;

***********************************************************
-- Primary Key = staffNo
-- Foreign Key = branchNo (Not used in this query)
-- Degree = 3 
-- Cardinality = 1 

c:

SELECT branchNo, COUNT(*) AS staff_count, SUM(salary) AS total_salary FROM Staff GROUP BY branchNo HAVING COUNT(*) > 1;

**************************************************
-- Primary Key = staffNo
-- Foreign Key = branchNo (references Branch.branchNo)
-- Degree = 3 
-- Cardinality = 2


d:

SELECT city FROM Branch UNION SELECT city FROM PropertyForRent ORDER BY city;

****************************************************
-- Primary Key = Not used
-- Foreign Key = Not used
-- Degree = 1 
-- Cardinality = 4

e:
SELECT DISTINCT b.city FROM Branch b WHERE EXISTS ( SELECT 1 FROM PropertyForRent p WHERE p.city = b.city ) ORDER BY b.city;

***************************************************
-- Primary Key = Not used
-- Foreign Key = Not used
-- Degree = 1
-- Cardinality = 3


f:

SELECT COUNT(*) AS total_assistants, SUM(salary) AS total_salary, AVG(salary) AS average_salary FROM Staff WHERE oPosition = 'Assistant';

*********************************************************
-- Primary Key = staffNo (Staff table)
-- Foreign Key = branchNo (references Branch.branchNo)
-- Degree = 3 
-- Cardinality = 1 


g:

SELECT 
    b.branchNo,
    b.city AS branchCity,
    s.staffNo AS memberStaffNo,
    s.fName || ' ' || s.lName AS memberName,
    p.staffNo AS managerStaffNo,
    mgr.fName || ' ' || mgr.lName AS managerName,
    p.propertyNo,
    p.street AS propertyAddress,
    p.city AS propertyCity,
    p.rent
FROM 
    Branch b
JOIN 
    Staff s ON b.branchNo = s.branchNo
LEFT JOIN 
    PropertyForRent p ON s.staffNo = p.staffNo
LEFT JOIN 
    Staff mgr ON p.staffNo = mgr.staffNo
ORDER BY 
    b.branchNo, s.staffNo, p.propertyNo;

**********************************************************


-- Primary Keys = branchNo (Branch), staffNo (Staff), propertyNo (PropertyForRent)
-- Foreign Keys = branchNo in Staff references Branch, staffNo in PropertyForRent references Staff
-- Degree = 9 
-- Cardinality = 7 (Number of staff Ã— their managed properties) per branch